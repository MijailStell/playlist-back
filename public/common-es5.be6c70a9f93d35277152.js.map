{"version":3,"sources":["webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/shared/services/base.service.ts"],"names":["AuthService","httpClient","super","userLogin","this","post","urlBaseServiciosApi","userRegister","BaseService","httpOptions","headers","err","errorMessage","error","Error","UnErrorHaOcurrido","message"],"mappings":"quCAEA,oFAQO,iBAAMA,EAAN,a,kOAAA,iBAML,WAAsBC,2BACpBC,cAAMD,IADcA,eANjB,wCAUCE,GAEJ,OAAOC,KAAKH,WAAWI,KADR,IAAYC,oBAAf,kBAC0BH,KAZnC,+BAeII,GAEP,OAAOH,KAAKH,WAAWI,KADR,IAAYC,oBAAf,qBAC0BC,OAjBnC,GAA2B,K,6CAArBP,GAAW,Y,yBAAXA,EAAW,QAAXA,EAAW,qBAFV,S,EAEP,I,kCCVP,oFAQO,iBAAMQ,EAAN,WAUL,WAAsBP,aAAA,KAAAA,aARZ,KAAAQ,YAAc,CACtBC,QAAS,IAAI,IACX,CACE,eAAgB,sBALjB,8CAYiBC,GACpB,IAAIC,EAMJ,OAJEA,EADED,EAAIE,iBAAiBC,MAArBH,UACgB,IAAWI,kBAD3BJ,cACkDA,EAAIE,MAAMG,SAE/CL,EAEV,YAAWC,OAnBf,K,6CAAMJ,GAAW,Y,yBAAXA,EAAW,QAAXA,EAAW,qBAFV,S,EAEP,O","file":"x","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseService } from 'src/app/shared/services/base.service';\nimport { UserRegister } from 'src/app/core/models/user-register';\nimport { environment } from 'src/environments/environment'\nimport { UserLogin } from 'src/app/core/models/user-login';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService  extends BaseService {\n\n  /**\n   * Constructor\n   * @param httpClient Instancia para invocaci√≥n a servicios\n   */\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  login(userLogin: UserLogin) {\n    const url = `${environment.urlBaseServiciosApi}/api/auth/login`;\n    return this.httpClient.post<any>(url, userLogin);\n  }\n\n  register(userRegister: UserRegister) {\n    const url = `${environment.urlBaseServiciosApi}/api/auth/register`;\n    return this.httpClient.post<any>(url, userRegister);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { Constantes } from 'src/app/shared/util/constantes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService {\n\n  protected httpOptions = {\n    headers: new HttpHeaders(\n      {\n        'Content-Type': 'application/json'\n      }\n    )\n  };\n\n  constructor(protected httpClient: HttpClient) { }\n\n  protected handleError(err: any) {\n    let errorMessage = '';\n    if (err.error instanceof Error) {\n      errorMessage = `${Constantes.UnErrorHaOcurrido} : ${err.error.message}`;\n    } else {\n      errorMessage = err;\n    }\n    return throwError(errorMessage);\n  }\n}\n"]}