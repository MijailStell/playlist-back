{"version":3,"sources":["webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/shared/services/base.service.ts"],"names":["AuthService","httpClient","super","userLogin","this","post","urlBaseServiciosApi","userRegister","BaseService","httpOptions","headers","err","errorMessage","error","Error","UnErrorHaOcurrido","message"],"mappings":"6FAEA,oFAQO,Y,MAAMA,UAAqB,IAMhC,YAAsBC,GACpBC,MAAMD,GADc,KAAAA,aAItB,MAAME,GAEJ,OAAOC,KAAKH,WAAWI,KADR,IAAYC,oBAAf,kBAC0BH,GAGxC,SAASI,GAEP,OAAOH,KAAKH,WAAWI,KADR,IAAYC,oBAAf,qBAC0BC,I,6CAjB7BP,GAAW,Y,yBAAXA,EAAW,QAAXA,EAAW,qBAFV,S,GAEP,I,kCCVP,oFAQO,Y,MAAMQ,EAUX,YAAsBP,GAAA,KAAAA,aARZ,KAAAQ,YAAc,CACtBC,QAAS,IAAI,IACX,CACE,eAAgB,sBAOZ,YAAYC,GACpB,IAAIC,EAAe,GAMnB,OAJEA,EADED,EAAIE,iBAAiBC,MACR,GAAG,IAAWC,uBAAuBJ,EAAIE,MAAMG,UAE/CL,EAEV,YAAWC,I,6CAnBTJ,GAAW,Y,yBAAXA,EAAW,QAAXA,EAAW,qBAFV,S,GAEP","file":"x","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseService } from 'src/app/shared/services/base.service';\nimport { UserRegister } from 'src/app/core/models/user-register';\nimport { environment } from 'src/environments/environment'\nimport { UserLogin } from 'src/app/core/models/user-login';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService  extends BaseService {\n\n  /**\n   * Constructor\n   * @param httpClient Instancia para invocaci√≥n a servicios\n   */\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  login(userLogin: UserLogin) {\n    const url = `${environment.urlBaseServiciosApi}/api/auth/login`;\n    return this.httpClient.post<any>(url, userLogin);\n  }\n\n  register(userRegister: UserRegister) {\n    const url = `${environment.urlBaseServiciosApi}/api/auth/register`;\n    return this.httpClient.post<any>(url, userRegister);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { Constantes } from 'src/app/shared/util/constantes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService {\n\n  protected httpOptions = {\n    headers: new HttpHeaders(\n      {\n        'Content-Type': 'application/json'\n      }\n    )\n  };\n\n  constructor(protected httpClient: HttpClient) { }\n\n  protected handleError(err: any) {\n    let errorMessage = '';\n    if (err.error instanceof Error) {\n      errorMessage = `${Constantes.UnErrorHaOcurrido} : ${err.error.message}`;\n    } else {\n      errorMessage = err;\n    }\n    return throwError(errorMessage);\n  }\n}\n"]}